@model ClothStore.Models.MatHang

@{
    ViewBag.Title = "[Admin] Thêm sản phẩm mới";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Thêm sản phẩm mới</h2>
<hr />
<div class="row">
    <div class="col-7">
        @using (Html.BeginForm("SaveProduct", "AdProduct", FormMethod.Post, new {enctype = "multipart/form-data"}))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Tên mặt hàng</label>
                @Html.EditorFor(model => model.TenMatHang, new { htmlAttributes = new { @class = "form-control", id = "txtTenMatHang" } })
                @Html.ValidationMessageFor(model => model.TenMatHang, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Mã mặt hàng</label>
                @Html.EditorFor(model => model.MaMatHang, new { htmlAttributes = new { @class = "form-control", id = "txtMaMatHang" } })
                @Html.ValidationMessageFor(model => model.MaMatHang, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Đơn giá</label>
                @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control", id = "txtDonGia", type = "number", step = "0.01", min = "0", max = "1000000000", onkeypress = "return isNumberKey(event);" } })
                @Html.ValidationMessageFor(model => model.DonGia, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Đơn vị</label>
                @Html.EditorFor(model => model.Dvt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dvt, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Số lượng</label>
                @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Mô tả</label>
                @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control", id = "txtMoTa" } })
                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Loại hàng</label>
                @Html.DropDownList("MaLoai", new SelectList(ViewBag.LoaiHang, "MaLoai", "TenLoai"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaLoai, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Nhà cung cấp</label>
                @Html.DropDownList("MaNCC", new SelectList(ViewBag.NCC, "MaNCC", "TenNCC"), htmlAttributes: new { @class = "form-control", id = "ChonNCC" })
                @Html.ValidationMessageFor(model => model.MaNCC, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="formGroupExampleInput2" class="form-label">Ảnh sản phẩm</label>
                @Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control", type = "file", id = "uploadimages", accept = ".png, .jpg, .jpeg" } })
                @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <input type="submit" value="Thêm sản phẩm" class="btn btn-outline-danger" />
            </div>
        }
    </div>
    <div class="col-5">
        <p class="card-text"><small class="text-body-secondary" style="color: #eb1616; font-size: medium"><b>Live Preview</b></small></p>
        <div class="border border-danger" style="margin:25px; padding: 25px">
            <h4 class="card-title" id="lbTenMatHang" style="word-wrap: break-word; max-width: 500px">Tên sản phẩm</h4>
            <img src="https://media.istockphoto.com/id/1392182937/fr/vectoriel/aucune-image-disponible-photo-%C3%A0-venir.jpg?s=170667a&w=0&k=20&c=wM21zVTFSjrpeKnznv6RjnE2M3PERZo2gqAsF09s5_Y=" class="card-img-top" id="previewimages" style="height: auto; width: 350px; object-fit: contain; margin-top: 10px">
            <div class="card-body">
                <h5 class="card-title" id="lbDonGia">0</h5>
                <p class="card-text" id="lbMoTa" style="word-wrap: break-word; max-width: 460px">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                <div>Nhà cung cấp: <span class="text-body-secondary" id="lbNCC"></span></div>
            </div>
        </div>
    </div>
    <div>
    </div>
    <hr />
    @Html.ActionLink("Quay lại danh sách", "ListProduct")
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    /*Tên mặt hàng*/
    var txtTenMatHang = document.getElementById("txtTenMatHang");
    var lbTenMatHang = document.getElementById("lbTenMatHang");

    txtTenMatHang.addEventListener("input", function () {
        lbTenMatHang.innerHTML = txtTenMatHang.value;
    });

    /*Đơn Giá*/
    var txtDonGia = document.getElementById("txtDonGia");
    var lbDonGia = document.getElementById("lbDonGia");

    txtDonGia.addEventListener("input", function () {
        lbDonGia.innerHTML = txtDonGia.value;
    });

    /*Mô Tả*/
    var txtMoTa = document.getElementById("txtMoTa");
    var lbMoTa = document.getElementById("lbMoTa");

    txtMoTa.addEventListener("input", function () {
        lbMoTa.innerHTML = txtMoTa.value;
    });

    /*Nhà Cung Cấp*/
    var ChonNCC = document.getElementById("ChonNCC");
    var lbNCC = document.getElementById("lbNCC");

    ChonNCC.addEventListener("change", function () {
        var selectedOption = ChonNCC.options[ChonNCC.selectedIndex];
        lbNCC.innerText = selectedOption.innerText;
    });

    /*Ảnh sản phẩm*/
    var uploadimages = document.getElementById("uploadimages");
    var previewimages = document.getElementById("previewimages");

    uploadimages.addEventListener("change", function () {
        var file = uploadimages.files[0];
        var reader = new FileReader();

        reader.addEventListener("load", function () {
            previewimages.src = reader.result;
        });
        reader.readAsDataURL(file);
    });

    /*Ràng buộc kích thước file ảnh không được lớn hơn 10MB*/
    var fileInput = document.getElementById("uploadimages");
    fileInput.addEventListener("change", function () {
        var fileSize = this.files[0].size;
        if (fileSize > 10485760)
        {
            alert("Kích thước ảnh phải nhỏ hơn 10MB");
            this.value = null;
        }
    });
</script>